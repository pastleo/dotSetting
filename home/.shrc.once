# vim: set ft=sh:
# PastLeo's shared rc for bash/zsh
# this only run once per terminal

# -----------------------------
# Welcome message
# -----------------------------

if [ -f "$HOME/.welcomeMsg" ]; then
  cat "$HOME/.welcomeMsg"
fi

# -----------------------------
# Environment variables
# -----------------------------

# _HOST env
if [ -z "$_HOST" ]; then
  if [ "$(which hostname 2> /dev/null)" ]; then
    export _HOST=$(hostname)
  elif [ -e /proc/sys/kernel/hostname ]; then
    export _HOST=$(cat /proc/sys/kernel/hostname)
  fi
fi

# EDITOR env
if [ -z "$EDITOR" ]; then
  if [ "$(which vim 2> /dev/null)" ]; then
    export EDITOR=vim
  fi
fi

# PATH env
add_path()
{
  tmp="$1:${PATH//$1/}"
  export PATH="${tmp//::/:}"
}
add_path "/usr/local/bin"
add_path "/usr/local/sbin"

if [ -z "$PATH_SYS" ]; then
  export PATH_SYS=$PATH
fi
add_path "$HOME/.bin"

# ls
if ls --help 2>&1 | grep -q -- --color; then
  export LS_PARAM='--color -hF'
else
  export LS_PARAM='-Gh'
fi

# rootless docker
if [ "$XDG_RUNTIME_DIR" ] && [ -e "$XDG_RUNTIME_DIR/docker.sock" ]; then
  export DOCKER_HOST="unix://$XDG_RUNTIME_DIR/docker.sock"
fi

# homebrew
if [ -e "/opt/homebrew/bin/brew" ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# asdf-vm
if [ -f "$HOME/.asdf/asdf.sh" ]; then
  . "$HOME/.asdf/asdf.sh"
fi

# SDK envs
export GOPATH="$HOME/.golang/"
export ANDROID_HOME="$HOME/.android-sdk/"

# UTF-8 locale
if hash locale 2> /dev/null; then
  utf8_locales=$(locale -a | grep -i 'utf.*8') # UTF-8 only
  en_us_utf8_locale=$(echo "$utf8_locales" | grep -i '^en.*us')
  zh_tw_utf8_locale=$(echo "$utf8_locales" | grep -i '^zh.*tw')
  first_utf8_locale=$(echo "$utf8_locales" | head -1)

  if [ -n "$en_us_utf8_locale" ]; then # prefer en_US.utf8
    export LC_ALL="$en_us_utf8_locale"
    export LANG="$en_us_utf8_locale"
    export UTF8_READY=true
  elif [ -n "$zh_tw_utf8_locale" ]; then # then prefer zh_TW.utf8
    export LC_ALL="$zh_tw_utf8_locale"
    export LANG="$zh_tw_utf8_locale"
    export UTF8_READY=true
  elif [ -n "$first_utf8_locale" ]; then
    export LC_ALL="$first_utf8_locale"
    export LANG="$first_utf8_locale"
    export UTF8_READY=true
  fi
fi

if [[ $TERM =~ tmux-* ]]; then
  export TERM_RGB=true
elif [[ $TERM =~ iterm-* ]]; then
  export TERM_RGB=true
elif [[ $TERM =~ vte-* ]]; then
  export TERM_RGB=true
elif [[ $TERM =~ gnome-* ]]; then
  export TERM_RGB=true
elif [[ $TERM =~ xterm-* ]]; then
  if [[ $XTERM_VERSION ]]; then
    export TERM_RGB=true
  elif [[ $KONSOLE_VERSION ]]; then
    export TERM_RGB=true
  elif [[ $ITERM_SESSION_ID ]]; then
    export TERM_RGB=true
  elif [[ $VTE_VERSION ]]; then
    export TERM_RGB=true
  fi
fi

# -----------------------------
# Host's specific rc
# -----------------------------

if [ -f "$HOME/.shrc.local" ]; then
  export SHRC_LOCAL_EXISTS=true
fi

# see ~/.shrc for ~/.shrc.local template
# example for ssh-agent:
#
# ```
# # vim: set ft=sh:
#
# if [ -z "$SHRC_LOCAL_SOURCED" ]; then
#   export SHRC_LOCAL_SOURCED=true
#
#   if [ -z "$SSH_AUTH_SOCK" ]; then # should not have this if for macos
#     eval $(ssh-agent)
#     ssh-add
#   fi
# fi
# ```
#
# example for gpg-agent as ssh agent:
#
# ```
# # vim: set ft=sh:
#
# if [ -z "$SHRC_LOCAL_SOURCED" ]; then
#   export SHRC_LOCAL_SOURCED=true
#
#   if [ -z "$SSH_AUTH_SOCK" ]; then # should not have this if for macos
#     export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
#     gpgconf --launch gpg-agent
#   fi
# fi
# ```

# -----------------------------
# Terminal startup report
# -----------------------------

if [ -n "$SSH_CLIENT" ]; then
  from_info="\033[1;37m$SSH_CLIENT\033[0m"
elif [ -n "$DISPLAY" ]; then
  from_info="\033[1;34mDISPLAY $DISPLAY\033[0m"
else
  from_info="\033[1;35m$(tty)\033[0m"
fi
if [ -n "$LANG" ]; then
  lang_info="\033[1;34m$LANG\033[0m"
else
  lang_info="\033[1;31m(not set)\033[0m"
fi
if [ -n "$EDITOR" ]; then
  editor_info="\033[1;34m$EDITOR\033[0m"
else
  editor_info="\033[1;31m(not set)\033[0m"
fi
echo -e "FROM: $from_info | LANG: $lang_info | EDITOR: $editor_info"
